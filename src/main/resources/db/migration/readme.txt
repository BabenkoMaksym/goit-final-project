Таблиця users

Опис перевірки для імен користувачів (CHECK (username ~ '^[A-Za-z0-9]{5,50}$')):

~ - оператор зіставлення з регулярним виразом;
^[A-Za-z0-9] - початок рядка і дозволені символи (латинські літери і цифри);
{5,50} - квантифікатор, який дозволяє вказати мінімальну та максимальну довжину рядка;
$ - кінець рядка.
Опис перевірки для електронної пошти (CHECK (email ~ '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')):

^[A-Za-z0-9._%+-]+ - початок рядка і дозволені символи логіну (латинські літери, цифри і деякі символи, такі як крапка,
 підкреслення, знаки плюса та мінуса);
@ - символ '@';
[A-Za-z0-9.-]+ - дозволені символи домену (латинські літери, цифри, крапки та дефіси);
\. - крапка, яка використовується для розділення доменних імен;
[A-Za-z]{2,} - останній компонент доменного імені повинен складатися з двох або більше латинських літер;
$ - кінець рядка.

Таблиця notes

Ми використали тип даних UUID для створення унікальних ідентифікаторів для кожної нотатки,
VARCHAR для зберігання текстових даних, INTEGER для зберігання ідентифікатора користувача у таблиці users,
а також TIMESTAMP для збереження дати та часу створення нотатки.
У колонках name, content та access_type ми використовуємо CHECK обмеження, щоб переконатись,
що значення відповідають вимогам щодо мінімальної та максимальної довжини рядка або списку дозволених значень.
Колонка access_type має два дозволені значення, які ми обмежили за допомогою CHECK обмеження.
Колонка user_id має зовнішній ключ, який посилається на поле id в таблиці users.